const createEditSuggestions = require('./createEditSuggestions'),
	candidateUpdate = require('./candidateUpdate'),
	Candidate = require('./candidate'),
	ObjectId = require('mongodb').ObjectId,

	cloudinary = require('cloudinary').v2;


//This function saves candidate into the DB, and uploads the CV
function saveEditSuggestionUpCV(req, cb) {
	let public_id = "".concat(
		req.body['firstName'],
		" ", req.body['lastName'], 
		" ", req.body.position,
		" ", req.body.uni,
		" page-"),
		quality = 15;
	let aCvURLs = req.body.aC;
	let LAST_CV_PAGE = req.files.length - 1;
	for (i = 0; i < req.files.length; i++) {
		cloudinary.uploader.upload(req.files[index].path,
			{ public_id, quality },
			function (error, result) {
				if (error) {
					cb(err);
				}
				else {
					if (i == LAST_CV_PAGE) {
						createEditSuggestions(req.body, req.id, aCvURLs)
							.then((editSuggestion) => { cb(editSuggestion) })
							.catch(err => {
								cb(err, null);

							})
					}
				}


			}
		);


	}





	if (req.files.length === 0) {


		createEditSuggestions(req.body, req.body.id, aCvURLs)
			.then(() => {
				console.log("this is the id", req.body.id);
				//flag the candidate that is pending approval
				Candidate.findOneAndUpdate({ _id: ObjectId(req.body.id) }, { $set: { pendingEditApproval: true } }, { useFindAndModify: false }, (err, doc) => {
					if (err) { cb(err, null); }
					else { cb(null, doc); }
				});
			})

			.catch(error => { cb(error, null) });









	}
}

function uploadToCloudinary(req, index) {
	let public_id = req.body['first-name'].append(" " + req.body['last-name'])
		.append(" " + req.body.position)
		.append(" " + req.body.uni)
		.append("page-" + i),
		quality = 15;

	return new Promise((resolve, reject) => {
		cloudinary.uploader.upload(req.files[index].path, {
			public_id, quality
		}, function (error, result) {
			if (error) {
				reject(error);
			}
			else {
				resolve(result)
			}

		}
		);



	});
}
module.exports = saveEditSuggestionUpCV;